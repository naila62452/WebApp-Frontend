{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport let PasswordStrengthBarComponent = /*#__PURE__*/(() => {\n  class PasswordStrengthBarComponent {\n    constructor() {\n      // @Input() public barLabel: string;\n      this.passwordStrength = new EventEmitter();\n      this.msg = '';\n      this.colors = ['darkred', 'orangered', 'orange', 'yellowgreen'];\n    }\n\n    ngOnInit() {}\n\n    static checkStrength(p) {\n      let force = 0;\n      const regex = /[$-/:-?{-~!\"^_@`\\[\\]]/g;\n      const lowerLetters = /[a-z]+/.test(p);\n      const upperLetters = /[A-Z]+/.test(p);\n      const numbers = /[0-9]+/.test(p);\n      const symbols = regex.test(p);\n      const flags = [lowerLetters, upperLetters, numbers, symbols];\n      let passedMatches = 0;\n\n      for (const flag of flags) {\n        passedMatches += flag === true ? 1 : 0;\n      }\n\n      force += 2 * p.length + (p.length >= 10 ? 1 : 0);\n      force += passedMatches * 10; // short password\n\n      force = p.length <= 8 ? Math.min(force, 10) : force; // poor variety of characters\n\n      force = passedMatches === 1 ? Math.min(force, 10) : force;\n      force = passedMatches === 2 ? Math.min(force, 20) : force;\n      force = passedMatches === 3 ? Math.min(force, 30) : force;\n      force = passedMatches === 4 ? Math.min(force, 40) : force;\n      return force;\n    }\n\n    ngOnChanges(changes) {\n      const password = changes['passwordToVerify'].currentValue;\n      this.setBarColors(4, '#DDD');\n\n      if (password) {\n        const c = this.getColor(PasswordStrengthBarComponent.checkStrength(password));\n        this.setBarColors(c.idx, c.col);\n        const pwdStrength = PasswordStrengthBarComponent.checkStrength(password);\n        pwdStrength === 40 ? this.passwordStrength.emit(true) : this.passwordStrength.emit(false);\n\n        switch (c.idx) {\n          case 1:\n            this.msg = 'Poor';\n            break;\n\n          case 2:\n            this.msg = 'Not Good';\n            break;\n\n          case 3:\n            this.msg = 'Average';\n            break;\n\n          case 4:\n            this.msg = 'Good';\n            break;\n        }\n      } else {\n        this.msg = '';\n      }\n    }\n\n    getColor(s) {\n      let idx = 0;\n\n      if (s <= 10) {\n        idx = 0;\n      } else if (s <= 20) {\n        idx = 1;\n      } else if (s <= 30) {\n        idx = 2;\n      } else if (s <= 40) {\n        idx = 3;\n      } else {\n        idx = 4;\n      }\n\n      this.msgColor = this.colors[idx];\n      return {\n        idx: idx + 1,\n        col: this.colors[idx]\n      };\n    }\n\n    setBarColors(count, col) {// for (let n = 0; n < count; n++) {\n      //   this['bar' + n] = col;\n      // }\n    }\n\n  }\n\n  PasswordStrengthBarComponent.ɵfac = function PasswordStrengthBarComponent_Factory(t) {\n    return new (t || PasswordStrengthBarComponent)();\n  };\n\n  PasswordStrengthBarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PasswordStrengthBarComponent,\n    selectors: [[\"app-password-strength-bar\"]],\n    inputs: {\n      passwordToVerify: \"passwordToVerify\"\n    },\n    outputs: {\n      passwordStrength: \"passwordStrength\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 11,\n    vars: 11,\n    consts: [[1, \"strength\"], [1, \"strengthBar\"], [1, \"point\"]],\n    template: function PasswordStrengthBarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"span\");\n        i0.ɵɵtext(2, \"Password Strength:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"ul\", 1);\n        i0.ɵɵelement(4, \"li\", 2);\n        i0.ɵɵelement(5, \"li\", 2);\n        i0.ɵɵelement(6, \"li\", 2);\n        i0.ɵɵelement(7, \"li\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"br\");\n        i0.ɵɵelementStart(9, \"p\");\n        i0.ɵɵtext(10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵstyleProp(\"background-color\", ctx.bar0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵstyleProp(\"background-color\", ctx.bar1);\n        i0.ɵɵadvance(1);\n        i0.ɵɵstyleProp(\"background-color\", ctx.bar2);\n        i0.ɵɵadvance(1);\n        i0.ɵɵstyleProp(\"background-color\", ctx.bar3);\n        i0.ɵɵadvance(2);\n        i0.ɵɵstyleProp(\"color\", ctx.msgColor);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.msg);\n      }\n    },\n    styles: [\".strengthBar[_ngcontent-%COMP%]{display:inline;list-style:none;margin:0;padding:0;vertical-align:2px}.point[_ngcontent-%COMP%]:last-of-type{margin:0!important}.point[_ngcontent-%COMP%]{background:#DDD;border-radius:2px;display:inline-block;height:5px;margin-right:1px;width:62px}p[_ngcontent-%COMP%]{font-weight:700;font-size:20px}\"]\n  });\n  return PasswordStrengthBarComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}