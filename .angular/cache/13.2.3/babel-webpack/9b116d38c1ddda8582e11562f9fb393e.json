{"ast":null,"code":"import { HttpRequest } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/platform-browser\";\nconst api_path = 'http://localhost:5000/api/users';\nconst api_file = 'http://localhost:5000/api/image';\nexport let TeacherAuthService = /*#__PURE__*/(() => {\n  class TeacherAuthService {\n    constructor(http, _sanitize) {\n      this.http = http;\n      this._sanitize = _sanitize;\n    }\n\n    registerUser(registerForm) {\n      return this.http.post(`${api_path}/create`, registerForm);\n    }\n\n    loginUser(loginForm, isVerified) {\n      return this.http.post(`${api_path}/login`, loginForm, isVerified);\n    }\n\n    getUser() {\n      return this.http.get(`${api_path}/`);\n    }\n\n    getUserById() {\n      let id = localStorage.getItem('id');\n      return this.http.get(`${api_path}/${id}`);\n    }\n\n    updateUser(body) {\n      // console.log(body)\n      const bodyz = {\n        name: body.name // lastname: body.lastname,\n        // username: body.username,\n        // phone: body.phone,\n        // country: body.country\n\n      };\n      let id = localStorage.getItem('id');\n      const path = `${api_path}/update/${id}`; // console.log(bodyz)\n\n      return this.http.put(path, bodyz);\n    }\n\n    deleteUser() {\n      let id = localStorage.getItem('id');\n      return this.http.delete(`${api_path}/delete/${id}`); //), { headers: headers })\n    }\n\n    verifyEmail(token) {\n      return this.http.get(`${api_path}/confirm/${token}`, {\n        responseType: 'text'\n      });\n    }\n\n    changePassword(changeForm) {\n      let id = localStorage.getItem('id');\n      return this.http.post(`${api_path}/changePassword/${id}`, changeForm);\n    }\n\n    forgotPassword(forgotForm) {\n      return this.http.post(`${api_path}/forgot-password`, forgotForm);\n    }\n\n    resetPassword(userId, token, resetForm) {\n      return this.http.post(`${api_path}/forgot/${userId}/${token}`, resetForm, {\n        responseType: 'text'\n      });\n    }\n\n    requestResetPassword(userId, token) {\n      return this.http.get(`${api_path}/forgot/${userId}/${token}`, {\n        responseType: 'text'\n      });\n    }\n\n    upload(file) {\n      const formData = new FormData();\n      let id = localStorage.getItem('id');\n      formData.append('file', file);\n      const req = new HttpRequest('POST', `${api_file}/upload/${id}`, formData, {\n        reportProgress: true,\n        responseType: 'json'\n      });\n      return this.http.request(req);\n    }\n\n    getFilesByName() {\n      let name = localStorage.getItem('id');\n      return this.http.get(`${api_file}/files/${name}`, {\n        responseType: 'blob'\n      }); // responce type blob\n    }\n\n    getAllFiles() {\n      return this.http.get(`${api_file}/files`);\n    }\n\n    signInWithGoogle(id_token) {\n      return this.http.post(`${api_path}/google`, id_token);\n    }\n\n  }\n\n  TeacherAuthService.ɵfac = function TeacherAuthService_Factory(t) {\n    return new (t || TeacherAuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.DomSanitizer));\n  };\n\n  TeacherAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TeacherAuthService,\n    factory: TeacherAuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return TeacherAuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}