{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport { MustMatch } from 'src/_validator/password_validator';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/service/teacher-auth.service\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/icon\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"@angular/material/button\";\n\nfunction ResetPasswordComponent_small_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 24);\n    i0.ɵɵelementStart(1, \"div\");\n    i0.ɵɵtext(2, \" Your password must be at least 8 characters long. \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ResetPasswordComponent_small_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 24);\n    i0.ɵɵelementStart(1, \"div\");\n    i0.ɵɵtext(2, \" Your password and confirm password must be matched. \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let ResetPasswordComponent = /*#__PURE__*/(() => {\n  class ResetPasswordComponent {\n    constructor(route, teacherService, _snackBar, fb, router) {\n      this.route = route;\n      this.teacherService = teacherService;\n      this._snackBar = _snackBar;\n      this.fb = fb;\n      this.router = router;\n      this.hide = true;\n      this.resetForm = this.fb.group({\n        password: new FormControl(\"\", [Validators.required, Validators.minLength(8)]),\n        conpass: [\"\", [Validators.required]]\n      }, {\n        validator: MustMatch('password', 'conpass')\n      });\n    }\n\n    get passwordInput() {\n      return this.resetForm.get('password');\n    }\n\n    ngOnInit() {\n      const token = this.route.snapshot.params['token'];\n      const userId = this.route.snapshot.params['userId'];\n      this.teacherService.requestResetPassword(userId, token).subscribe(res => {\n        this._snackBar.open('reset your password', \"Ok\", {\n          duration: 5000,\n          panelClass: ['blue-snackbar']\n        });\n      }, err => {\n        // if (err?.error?.type === 'token-expired')\n        this._snackBar.open(\"The password reset link has been expired. Please request forgot password.\", \"Ok\", {\n          duration: 5000,\n          panelClass: ['blue-snackbar']\n        });\n\n        this.router.navigate(['/authenticate/forgotPassword']);\n      });\n    }\n\n    onSubmit() {\n      const token = this.route.snapshot.params['token'];\n      const userId = this.route.snapshot.params['userId'];\n      this.teacherService.resetPassword(userId, token, this.resetForm.value).subscribe(res => {\n        this._snackBar.open(\"Your password has been changed. You can login now.\", \"Ok\", {\n          duration: 5000,\n          panelClass: ['blue-snackbar']\n        });\n\n        this.resetForm.reset();\n        this.router.navigate(['/authenticate/login']);\n      }, err => {\n        console.log(err);\n\n        this._snackBar.open(\"The password reset link has been expired\", \"Ok\", {\n          duration: 5000,\n          panelClass: ['blue-snackbar']\n        }); // if (err?.error?.type === 'token-expired')\n        //   this._snackBar.open(\"The password reset link has been expired\", \"Ok\");\n\n      });\n    }\n\n  }\n\n  ResetPasswordComponent.ɵfac = function ResetPasswordComponent_Factory(t) {\n    return new (t || ResetPasswordComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.TeacherAuthService), i0.ɵɵdirectiveInject(i3.MatSnackBar), i0.ɵɵdirectiveInject(i4.FormBuilder), i0.ɵɵdirectiveInject(i1.Router));\n  };\n\n  ResetPasswordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ResetPasswordComponent,\n    selectors: [[\"app-reset-password\"]],\n    decls: 46,\n    vars: 6,\n    consts: [[1, \"main-content\"], [1, \"container\"], [1, \"row\"], [1, \"col-md-8\"], [1, \"card\"], [1, \"card-header\", \"card-header-danger\"], [1, \"card-title\"], [1, \"card-category\"], [1, \"card-body\"], [2, \"border\", \"none\", 3, \"formGroup\", \"ngSubmit\"], [\"for\", \"password\"], [1, \"password_form\", \"view-pass\"], [\"matInput\", \"\", \"formControlName\", \"password\", \"name\", \"password\", \"id\", \"password\", \"required\", \"\", 1, \"input_form\", 3, \"type\"], [\"matSuffix\", \"\", 1, \"pointer\", 3, \"click\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"for\", \"conpass\"], [1, \"input_text\"], [\"matInput\", \"\", \"formControlName\", \"conpass\", \"type\", \"password\", \"name\", \"conpass\", \"id\", \"Conpass\", \"required\", \"\", 1, \"input_form\"], [\"mat-stroked-button\", \"\", \"type\", \"submit\", 1, \"pointer\", 2, \"background-color\", \"#ccdceb\", 3, \"disabled\"], [1, \"material-icons\"], [1, \"col-md-4\"], [2, \"font-weight\", \"bold\"], [1, \"card\", \"card-profile\"], [\"src\", \"/assets/welcome.jpg\"], [1, \"text-danger\"]],\n    template: function ResetPasswordComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵelementStart(5, \"div\", 5);\n        i0.ɵɵelementStart(6, \"h4\", 6);\n        i0.ɵɵtext(7, \"Reset Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"p\", 7);\n        i0.ɵɵtext(9, \"Please enter to your new password.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"br\");\n        i0.ɵɵelementStart(11, \"div\", 8);\n        i0.ɵɵelementStart(12, \"form\", 9);\n        i0.ɵɵlistener(\"ngSubmit\", function ResetPasswordComponent_Template_form_ngSubmit_12_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(13, \"div\", 1);\n        i0.ɵɵelementStart(14, \"label\", 10);\n        i0.ɵɵelementStart(15, \"b\");\n        i0.ɵɵtext(16, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"mat-form-field\", 11);\n        i0.ɵɵelement(18, \"input\", 12);\n        i0.ɵɵelementStart(19, \"mat-icon\", 13);\n        i0.ɵɵlistener(\"click\", function ResetPasswordComponent_Template_mat_icon_click_19_listener() {\n          return ctx.hide = !ctx.hide;\n        });\n        i0.ɵɵtext(20);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(21, ResetPasswordComponent_small_21_Template, 3, 0, \"small\", 14);\n        i0.ɵɵelement(22, \"br\");\n        i0.ɵɵelementStart(23, \"label\", 15);\n        i0.ɵɵelementStart(24, \"b\");\n        i0.ɵɵtext(25, \"Confirm password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"mat-form-field\", 16);\n        i0.ɵɵelement(27, \"input\", 17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(28, ResetPasswordComponent_small_28_Template, 3, 0, \"small\", 14);\n        i0.ɵɵelementStart(29, \"button\", 18);\n        i0.ɵɵtext(30, \"Submit\");\n        i0.ɵɵelementStart(31, \"span\", 19);\n        i0.ɵɵtext(32, \" chevron_right \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(33, \"hr\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(34, \"br\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(35, \"br\");\n        i0.ɵɵelement(36, \"br\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"div\", 20);\n        i0.ɵɵelementStart(38, \"h1\", 21);\n        i0.ɵɵtext(39, \"Seeds\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(40, \"h2\");\n        i0.ɵɵtext(41, \"Best opportunity to grow together.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(42, \"div\", 22);\n        i0.ɵɵelement(43, \"img\", 23);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(44, \"br\");\n        i0.ɵɵelement(45, \"br\");\n      }\n\n      if (rf & 2) {\n        let tmp_3_0;\n        let tmp_4_0;\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"formGroup\", ctx.resetForm);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"type\", ctx.hide ? \"password\" : \"text\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"\", ctx.hide ? \"visibility_off\" : \"visibility\", \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.resetForm.valid && ((tmp_3_0 = ctx.resetForm.get(\"password\")) == null ? null : tmp_3_0.errors) && (((tmp_3_0 = ctx.resetForm.get(\"password\")) == null ? null : tmp_3_0.dirty) || ((tmp_3_0 = ctx.resetForm.get(\"password\")) == null ? null : tmp_3_0.touched)));\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", !ctx.resetForm.valid && ((tmp_4_0 = ctx.resetForm.get(\"conpass\")) == null ? null : tmp_4_0.errors) && (((tmp_4_0 = ctx.resetForm.get(\"conpass\")) == null ? null : tmp_4_0.dirty) || ((tmp_4_0 = ctx.resetForm.get(\"conpass\")) == null ? null : tmp_4_0.touched)));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.resetForm.invalid);\n      }\n    },\n    directives: [i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.FormGroupDirective, i5.MatFormField, i6.MatInput, i4.DefaultValueAccessor, i4.NgControlStatus, i4.FormControlName, i4.RequiredValidator, i7.MatIcon, i5.MatSuffix, i8.NgIf, i9.MatButton],\n    styles: [\"\"]\n  });\n  return ResetPasswordComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}