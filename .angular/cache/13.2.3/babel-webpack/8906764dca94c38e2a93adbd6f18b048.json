{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/questions.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"src/app/service/topics.service\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/button\";\nexport let TrueFalseComponent = /*#__PURE__*/(() => {\n  class TrueFalseComponent {\n    constructor(questionService, route, _snackBar, topicService) {\n      this.questionService = questionService;\n      this.route = route;\n      this._snackBar = _snackBar;\n      this.topicService = topicService;\n      this.submitEvent = new EventEmitter();\n      this.trueFalseForm = new FormGroup({\n        question: new FormControl(\"\", [Validators.required]),\n        answer: new FormControl(\"\", [Validators.required]),\n        posFeedback: new FormControl(\"\", [Validators.required]),\n        negFeedback: new FormControl(\"\", [Validators.required])\n      });\n      this.trueFalse = [];\n    }\n\n    SetAsSubmitted(value) {\n      this.submitEvent.emit(value);\n    }\n\n    ngOnInit() {\n      this.topicId = this.route.snapshot.paramMap.get('id');\n      this.topicService.getTopicByTopicId(this.topicId).subscribe(res => {\n        this.topicGetById = res;\n        console.log('response', res);\n      }, err => {\n        console.log(err);\n      });\n      this.topicId = this.route.snapshot.paramMap.get('id');\n      this.questionService.getTrueFalseByTopic(this.topicId).subscribe(res => {\n        this.trueFalse = res;\n        console.log('response', res);\n      }, err => {\n        console.log(err);\n      });\n    }\n\n    onSubmit() {\n      if (this.trueFalse.length >= this.topicGetById.noOfQuestions) {\n        this._snackBar.open(\" Your Limit has been execced\", \"Ok\", {\n          duration: 5000,\n          panelClass: ['blue-snackbar']\n        });\n\n        return;\n      }\n\n      this.topicId = this.route.snapshot.paramMap.get('id');\n      this.questionService.addTrueFalse(this.trueFalseForm.value, this.topicId).subscribe(res => {\n        console.log(res);\n\n        this._snackBar.open(\" Your Question has been created\", \"Ok\", {\n          duration: 5000,\n          panelClass: ['blue-snackbar']\n        }); // window.location.reload();\n\n\n        this.SetAsSubmitted(true);\n        this.trueFalseForm.reset();\n      }, err => {\n        console.log(err);\n      });\n    }\n\n    onDelete(id) {\n      this.questionService.deleteTrueFalse(id).subscribe(res => {\n        this.ngOnInit();\n\n        this._snackBar.open(\" Your Question has been Deleted\", \"Ok\", {\n          duration: 5000,\n          panelClass: ['blue-snackbar']\n        });\n      });\n    }\n\n  }\n\n  TrueFalseComponent.ɵfac = function TrueFalseComponent_Factory(t) {\n    return new (t || TrueFalseComponent)(i0.ɵɵdirectiveInject(i1.QuestionsService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.MatSnackBar), i0.ɵɵdirectiveInject(i4.TopicsService));\n  };\n\n  TrueFalseComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TrueFalseComponent,\n    selectors: [[\"app-true-false\"]],\n    outputs: {\n      submitEvent: \"submitEvent\"\n    },\n    decls: 40,\n    vars: 2,\n    consts: [[1, \"main-content\"], [1, \"container\"], [1, \"row\"], [1, \"col-md-8\"], [1, \"card\"], [1, \"card-header\", \"card-header-danger\"], [1, \"card-title\"], [1, \"card-body\"], [3, \"formGroup\"], [1, \"textarea\"], [\"type\", \"text\", \"name\", \"question\", \"id\", \"question\", \"formControlName\", \"question\", \"required\", \"\", \"rows\", \"4\", \"cols\", \"50\"], [1, \"answers\"], [\"type\", \"text\", \"name\", \"answer\", \"id\", \"answer\", \"formControlName\", \"answer\", \"required\", \"\"], [1, \"feedback\"], [1, \"feedback__step\"], [\"type\", \"text\", \"name\", \"posFeedback\", \"id\", \"posFeedback\", \"formControlName\", \"posFeedback\", \"required\", \"\"], [\"type\", \"text\", \"name\", \"negFeedback\", \"id\", \"negFeedback\", \"formControlName\", \"negFeedback\", \"required\", \"\"], [\"mat-stroked-button\", \"\", \"type\", \"submit\", 2, \"width\", \"40%\", \"text-align\", \"center\", \"font-size\", \"px\", 3, \"disabled\", \"click\"]],\n    template: function TrueFalseComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵelementStart(5, \"div\", 5);\n        i0.ɵɵelementStart(6, \"h4\", 6);\n        i0.ɵɵtext(7, \"Create True False\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"br\");\n        i0.ɵɵelementStart(9, \"div\", 7);\n        i0.ɵɵelementStart(10, \"form\", 8);\n        i0.ɵɵelementStart(11, \"div\", 9);\n        i0.ɵɵelementStart(12, \"mat-label\");\n        i0.ɵɵtext(13, \"Please enter the Question Statement.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"ul\");\n        i0.ɵɵelementStart(15, \"textarea\", 10);\n        i0.ɵɵtext(16, \" \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\");\n        i0.ɵɵelementStart(18, \"mat-label\");\n        i0.ɵɵtext(19, \" Please enter the correct answer. \");\n        i0.ɵɵelementStart(20, \"ul\", 11);\n        i0.ɵɵelementStart(21, \"span\");\n        i0.ɵɵtext(22, \"Answer:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(23, \"input\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 13);\n        i0.ɵɵelementStart(25, \"div\", 14);\n        i0.ɵɵelementStart(26, \"mat-label\");\n        i0.ɵɵtext(27, \"Feedback, If the answer is correct:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"textarea\", 15);\n        i0.ɵɵtext(29, \" \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"div\", 14);\n        i0.ɵɵelementStart(31, \"mat-label\");\n        i0.ɵɵtext(32, \"Feedback, If the answer is incorrect:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"textarea\", 16);\n        i0.ɵɵtext(34, \" \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"button\", 17);\n        i0.ɵɵlistener(\"click\", function TrueFalseComponent_Template_button_click_35_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵtext(36, \"Create\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(37, \"br\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(38, \"br\");\n        i0.ɵɵelement(39, \"br\");\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"formGroup\", ctx.trueFalseForm);\n        i0.ɵɵadvance(25);\n        i0.ɵɵproperty(\"disabled\", ctx.trueFalseForm.invalid);\n      }\n    },\n    directives: [i5.ɵNgNoValidate, i5.NgControlStatusGroup, i5.FormGroupDirective, i6.MatLabel, i5.DefaultValueAccessor, i5.NgControlStatus, i5.FormControlName, i5.RequiredValidator, i7.MatButton],\n    styles: [\"\"]\n  });\n  return TrueFalseComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}