{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { NotFoundError } from 'src/_Error-handler/notFoundError';\nimport { UnauthorizedErrors } from 'src/_Error-handler/unauthorizedErrors';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/teacher-auth.service\";\nimport * as i2 from \"@angular/material/snack-bar\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"@angular/material/icon\";\nimport * as i9 from \"@angular/material/button\";\nimport * as i10 from \"@ngx-translate/core\";\n\nfunction LoginComponent_small_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 30);\n    i0.ɵɵelementStart(1, \"div\");\n    i0.ɵɵtext(2, \" Please enter your Email. \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_small_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 31);\n    i0.ɵɵelementStart(1, \"div\");\n    i0.ɵɵtext(2, \" Please enter your password. \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(teacherService, _snackBar, router, route) {\n      this.teacherService = teacherService;\n      this._snackBar = _snackBar;\n      this.router = router;\n      this.route = route;\n      this.loginForm = new FormGroup({\n        email: new FormControl(\"\", [Validators.required]),\n        password: new FormControl(\"\", [Validators.required])\n      });\n      this.hide = true;\n    }\n\n    ngOnInit() {}\n\n    onSubmit() {\n      this.loading = true;\n      this.teacherService.loginUser(this.loginForm.value, true).subscribe(res => {\n        const token = res.token;\n        this.token = token;\n\n        if (token) {\n          const expiresInDuration = res.expiresIn;\n          this.setAuthTimer(expiresInDuration);\n          const now = new Date();\n          const expirationDate = new Date(now.getTime() + expiresInDuration * 1000);\n          this.saveAuthData(token, expirationDate, res.user.name, res.user._id, res.user.role);\n        }\n\n        console.log(res);\n\n        this._snackBar.open(\"You have logged in successfully\", \"Ok\", {\n          duration: 5000,\n          panelClass: ['blue-snackbar']\n        });\n\n        this.loading = false;\n        this.loginForm.reset();\n\n        if (res.user.role === 'Admin') {\n          let returnUrl = this.route.snapshot.queryParamMap.get('returnUrl');\n          return this.router.navigate([returnUrl || '/adminUser/profile']);\n        } else {\n          let returnUrl = this.route.snapshot.queryParamMap.get('returnUrl');\n          return this.router.navigate([returnUrl || `/user/profile`]);\n        }\n\n        ;\n      }, err => {\n        if (err instanceof NotFoundError) {\n          this._snackBar.open(\"No user associated with this email\", \"Ok\", {\n            duration: 5000,\n            panelClass: ['blue-snackbar']\n          });\n        } else if (err instanceof UnauthorizedErrors) {\n          this._snackBar.open(\"Incorrect Email or Password\", \"Ok\", {\n            duration: 5000,\n            panelClass: ['blue-snackbar']\n          });\n        } else throw err;\n      });\n    } // onSubmit() {\n    //   this.loading = true\n    //   this.teacherService.loginUser(this.loginForm.value, true)\n    //     .subscribe(\n    //       res => {\n    //         localStorage.setItem('token', res.token);\n    //         localStorage.setItem('name', res.user.name);\n    //         localStorage.setItem('id', res.user._id);\n    //         localStorage.setItem('isLoggedIn', 'true');\n    //         console.log(res)\n    //         this._snackBar.open(\"You have logged in successfully\", \"Ok\", {\n    //           duration: 5000,\n    //           panelClass: ['blue-snackbar']\n    //         });\n    //         this.loading = false;\n    //         this.loginForm.reset();\n    //         this.router.navigate(['/user/profile']);\n    //       },\n    //       (err: APPErrors) => {\n    //         if (err instanceof NotFoundError) {\n    //           this._snackBar.open(\"No user associated with this email\", \"Ok\", {\n    //             duration: 5000,\n    //             panelClass: ['blue-snackbar']\n    //           });\n    //         }\n    //         else if (err instanceof UnauthorizedErrors) {\n    //           this._snackBar.open(\"Incorrect Email or Password\", \"Ok\", {\n    //             duration: 5000,\n    //             panelClass: ['blue-snackbar']\n    //           });\n    //         }\n    //         else throw err;\n    //       })\n    // }\n\n\n    onLogout() {\n      this.teacherService.onLogout();\n      clearTimeout(this.tokenTimer);\n    }\n\n    saveAuthData(token, expirationDate, name, _id, role) {\n      localStorage.setItem('token', token);\n      localStorage.setItem('role', role);\n      localStorage.setItem('expiration', expirationDate.toISOString());\n      localStorage.setItem('name', name);\n      localStorage.setItem('id', _id);\n      localStorage.setItem(\"isLoggedIn\", \"true\");\n    } // private clearAuthData() {\n    //   localStorage.removeItem('id');\n    //   localStorage.removeItem('name');\n    //   localStorage.removeItem(\"token\");\n    //   localStorage.removeItem('role');\n    //   localStorage.setItem('isLoggedIn', 'false');\n    //   localStorage.removeItem(\"expiration\");\n    // }\n\n\n    autoAuthUser() {\n      const authInformation = this.getAuthData();\n      const now = new Date();\n      const expiresInDuration = authInformation.expirationDate.getTime() - now.getTime();\n\n      if (expiresInDuration > 0) {\n        this.token = authInformation.token;\n        this.setAuthTimer(expiresInDuration / 1000);\n      }\n    }\n\n    getAuthData() {\n      const token = localStorage.getItem(\"token\");\n      const expirationDate = localStorage.getItem(\"expiration\");\n\n      if (!token || !expirationDate) {\n        return null;\n      } else return {\n        token: token,\n        expirationDate: new Date(expirationDate)\n      };\n    }\n\n    setAuthTimer(duration) {\n      this.tokenTimer = setTimeout(() => {\n        this.onLogout();\n      }, duration * 1000);\n    }\n\n    rememberMe() {// localStorage.getItem('token');\n      // localStorage.getItem('name');\n    }\n\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.TeacherAuthService), i0.ɵɵdirectiveInject(i2.MatSnackBar), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n  };\n\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 62,\n    vars: 24,\n    consts: [[1, \"main-content\"], [1, \"container\"], [1, \"row\"], [1, \"col-md-8\"], [1, \"card\"], [1, \"card-header\", \"card-header-danger\"], [1, \"card-title\"], [1, \"card-category\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [\"for\", \"email\"], [1, \"input_text\"], [\"matInput\", \"\", \"type\", \"email\", \"name\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", \"required\", \"\", 1, \"input_form\"], [\"class\", \"text-danger\", \"role\", \"alert\", 4, \"ngIf\"], [\"for\", \"password\"], [1, \"password_form\", \"view-pass\"], [\"matInput\", \"\", \"formControlName\", \"password\", \"name\", \"password\", \"id\", \"password\", \"required\", \"\", 3, \"type\"], [\"matSuffix\", \"\", 1, \"pointer\", 3, \"click\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"type\", \"checkbox\", \"name\", \"remember\", 3, \"click\"], [1, \"password\"], [3, \"innerHTML\"], [\"mat-stroked-button\", \"\", \"type\", \"submit\", 1, \"pointer\", 2, \"background-color\", \"#ccdceb\", 3, \"disabled\"], [1, \"material-icons\"], [1, \"signin\"], [\"href\", \"\", \"routerLink\", \"/authenticate/register\"], [1, \"col-md-4\"], [2, \"font-weight\", \"bold\"], [1, \"card\", \"card-profile\"], [\"src\", \"/assets/welcome_img.png\"], [\"role\", \"alert\", 1, \"text-danger\"], [1, \"text-danger\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵelementStart(5, \"div\", 5);\n        i0.ɵɵelementStart(6, \"h4\", 6);\n        i0.ɵɵtext(7);\n        i0.ɵɵpipe(8, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"p\", 7);\n        i0.ɵɵtext(10);\n        i0.ɵɵpipe(11, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"br\");\n        i0.ɵɵelementStart(13, \"div\", 8);\n        i0.ɵɵelementStart(14, \"form\", 9);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_14_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(15, \"mat-label\", 10);\n        i0.ɵɵelementStart(16, \"b\");\n        i0.ɵɵtext(17);\n        i0.ɵɵpipe(18, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"mat-form-field\", 11);\n        i0.ɵɵelement(20, \"input\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(21, LoginComponent_small_21_Template, 3, 0, \"small\", 13);\n        i0.ɵɵelement(22, \"br\");\n        i0.ɵɵelementStart(23, \"label\", 14);\n        i0.ɵɵelementStart(24, \"b\");\n        i0.ɵɵtext(25);\n        i0.ɵɵpipe(26, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(27, \"br\");\n        i0.ɵɵelementStart(28, \"mat-form-field\", 15);\n        i0.ɵɵelement(29, \"input\", 16);\n        i0.ɵɵelementStart(30, \"mat-icon\", 17);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_mat_icon_click_30_listener() {\n          return ctx.hide = !ctx.hide;\n        });\n        i0.ɵɵtext(31);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(32, LoginComponent_small_32_Template, 3, 0, \"small\", 18);\n        i0.ɵɵelement(33, \"br\");\n        i0.ɵɵelementStart(34, \"label\");\n        i0.ɵɵelementStart(35, \"input\", 19);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_input_click_35_listener() {\n          return ctx.rememberMe();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(36);\n        i0.ɵɵpipe(37, \"translate\");\n        i0.ɵɵelementStart(38, \"div\", 20);\n        i0.ɵɵelement(39, \"span\", 21);\n        i0.ɵɵpipe(40, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(41, \"button\", 22);\n        i0.ɵɵtext(42, \"Login\");\n        i0.ɵɵelementStart(43, \"span\", 23);\n        i0.ɵɵtext(44, \" chevron_right \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(45, \"hr\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(46, \"br\");\n        i0.ɵɵelementStart(47, \"div\", 24);\n        i0.ɵɵelementStart(48, \"span\");\n        i0.ɵɵtext(49, \"Do not have an account ? \");\n        i0.ɵɵelementStart(50, \"a\", 25);\n        i0.ɵɵtext(51, \"Sign up\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(52, \".\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(53, \"div\", 26);\n        i0.ɵɵelementStart(54, \"h1\", 27);\n        i0.ɵɵtext(55, \"SEEDS content creation tool\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(56, \"h2\");\n        i0.ɵɵtext(57, \"Create new content and manage your account, to spread the seed of your knowledge.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(58, \"div\", 28);\n        i0.ɵɵelement(59, \"img\", 29);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(60, \"br\");\n        i0.ɵɵelement(61, \"br\");\n      }\n\n      if (rf & 2) {\n        let tmp_4_0;\n        let tmp_8_0;\n        i0.ɵɵadvance(7);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(8, 12, \"login_page.login\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(11, 14, \"login_page.text\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(18, 16, \"login_page.email\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", !ctx.loginForm.valid && ((tmp_4_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_4_0.errors) && (((tmp_4_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_4_0.dirty) || ((tmp_4_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_4_0.touched)));\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(26, 18, \"login_page.password\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"type\", ctx.hide ? \"password\" : \"text\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"\", ctx.hide ? \"visibility_off\" : \"visibility\", \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.loginForm.valid && ((tmp_8_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_8_0.errors) && (((tmp_8_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_8_0.dirty) || ((tmp_8_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_8_0.touched)));\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(37, 20, \"login_page.remember\"), \" \");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"innerHTML\", i0.ɵɵpipeBind1(40, 22, \"login_page.forgot\"), i0.ɵɵsanitizeHtml);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n      }\n    },\n    directives: [i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.FormGroupDirective, i5.MatLabel, i5.MatFormField, i6.MatInput, i4.DefaultValueAccessor, i4.NgControlStatus, i4.FormControlName, i4.RequiredValidator, i7.NgIf, i8.MatIcon, i5.MatSuffix, i9.MatButton, i3.RouterLinkWithHref],\n    pipes: [i10.TranslatePipe],\n    styles: [\"\"]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}