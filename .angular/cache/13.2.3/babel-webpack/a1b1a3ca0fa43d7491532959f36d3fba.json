{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/mcqs.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"@angular/platform-browser\";\nimport * as i5 from \"src/app/service/topics.service\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/input\";\nimport * as i9 from \"@angular/common\";\nimport * as i10 from \"@angular/material/select\";\nimport * as i11 from \"@angular/material/core\";\nimport * as i12 from \"@angular/material/button\";\n\nfunction MCQSComponent_small_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 32);\n    i0.ɵɵelementStart(1, \"div\");\n    i0.ɵɵtext(2, \" Please enter a Sequence of activity. \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction MCQSComponent_small_56_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 32);\n    i0.ɵɵelementStart(1, \"div\");\n    i0.ɵɵtext(2, \" Please select Answer. \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let MCQSComponent = /*#__PURE__*/(() => {\n  class MCQSComponent {\n    constructor(mcqsService, router, route, _snackBar, sanitizer, topicService) {\n      this.mcqsService = mcqsService;\n      this.router = router;\n      this.route = route;\n      this._snackBar = _snackBar;\n      this.sanitizer = sanitizer;\n      this.topicService = topicService;\n      this.submitEvent = new EventEmitter();\n      this.mcqsForm = new FormGroup({\n        mcqs: new FormControl(\"\", [Validators.required]),\n        option1: new FormControl(\"\", [Validators.required]),\n        option2: new FormControl(\"\", [Validators.required]),\n        option3: new FormControl(\"\", [Validators.required]),\n        option4: new FormControl(\"\", [Validators.required]),\n        answer: new FormControl(\"\", [Validators.required]),\n        // file: new FormControl(\"\", [\n        // ]),\n        posFeedback: new FormControl(\"\", [Validators.required]),\n        negFeedback: new FormControl(\"\", [Validators.required]),\n        sequence: new FormControl(\"\", [Validators.required])\n      });\n      this.mcqs = [];\n      this.mcqImages = [];\n      this.imageBlobUrl = [];\n    }\n\n    SetAsSubmitted(value) {\n      this.submitEvent.emit(value);\n    }\n\n    ngOnInit() {\n      this.topic = this.route.snapshot.paramMap.get('id');\n      this.topicService.getTopicByTopicId(this.topic).subscribe(res => {\n        this.topicGetById = res;\n        console.log('response', res);\n      }, err => {\n        console.log(err);\n      }); // this.mcqsService.getQuestionByTopic(this.topic).subscribe(\n      //   res => {\n      //     console.log(res)\n      //     this.imageBlobUrl = []\n      //     this.mcqs = <any>res;\n      //     // this.mcqs.forEach(item => {\n      //     //   this.getImage(item.id)\n      //     // })\n      //   },\n      //   err => {\n      //     console.log(err)\n      //   })\n    }\n\n    getSantizeUrl(url) {\n      return this.sanitizer.bypassSecurityTrustHtml(url);\n    }\n\n    onSubmit() {\n      this.typeId = this.route.snapshot.paramMap.get('id');\n      this.topic = localStorage.getItem('topicId');\n      console.log(this.mcqsForm.value);\n      this.mcqsService.addAll(this.mcqsForm.value, this.topic).subscribe(res => {\n        this.mcqs.push(res);\n\n        this._snackBar.open(\" Your Question has been Posted\", \"Ok\", {\n          duration: 5000,\n          panelClass: ['blue-snackbar']\n        });\n\n        this.SetAsSubmitted(true);\n        localStorage.setItem('remainingQuestions', parseInt(localStorage.getItem('remainingQuestions')) + 1 + '');\n        this.mcqsForm.reset();\n      }, err => {\n        console.log(err);\n      });\n    } // onSubmit() {\n    //   if (this.mcqs.length >= this.topicGetById.noOfQuestions) {\n    //     this._snackBar.open(\" Your Limit has been execced\", \"Ok\", {\n    //       duration: 5000,\n    //       panelClass: ['blue-snackbar']\n    //     });\n    //     return\n    //   }\n    //   this.topic = this.route.snapshot.paramMap.get('id')\n    //   const formData = new FormData();\n    //   formData.append('file', this.mcqsForm.get('file').value);\n    //   console.log(this.mcqsForm.get('file').value);\n    //   formData.append(\"mcqs\", this.mcqsForm.get('mcqs').value)\n    //   formData.append(\"option1\", this.mcqsForm.get('option1').value)\n    //   formData.append(\"option2\", this.mcqsForm.get('option2').value)\n    //   formData.append(\"option3\", this.mcqsForm.get('option3').value)\n    //   formData.append(\"option4\", this.mcqsForm.get('option4').value)\n    //   formData.append(\"answer\", this.mcqsForm.get('answer').value)\n    //   formData.append(\"posFeedback\", this.mcqsForm.get('posFeedback').value)\n    //   formData.append(\"negFeedback\", this.mcqsForm.get('negFeedback').value)\n    //   this.questionService.addMcqs(formData, this.topic)\n    //     .subscribe(\n    //       res => {\n    //         this._snackBar.open(\" Your Question has been Posted\", \"Ok\", {\n    //           duration: 5000,\n    //           panelClass: ['blue-snackbar']\n    //         });\n    //         this.SetAsSubmitted(true);\n    //         localStorage.setItem('Submitted', JSON.stringify(this.SetAsSubmitted(true)))\n    //         let result = JSON.parse(localStorage.getItem('Submitted'))\n    //         this.mcqsForm.reset();\n    //       },\n    //       err => {\n    //         console.log(err)\n    //       });\n    // }\n    // Get image api\n    // getImage(id: string) {\n    //   console.log(this.mcqsForm.get('file').value.name)\n    //   this.questionService.getImageMcqs(id)\n    //     .subscribe((blob: any) => {\n    //       let objectURL = URL.createObjectURL(blob);\n    //       this.imageBlobUrl.push(this.sanitizer.bypassSecurityTrustUrl(objectURL));\n    //       console.log(this.imageBlobUrl)\n    //     })\n    // }\n    // createImageFromBlob(image: Blob) {\n    //   let reader = new FileReader();\n    //   reader.addEventListener(\"load\", () => {\n    //     this.imageBlobUrl = reader.result;\n    //     this.imageBlobUrl = this.getSantizeUrl(this.imageBlobUrl)\n    //     console.log(this.imageBlobUrl)\n    //   }, false);\n    //   if (image) {\n    //     reader.readAsDataURL(image);\n    //   }\n    // }\n\n\n    processFile(event) {\n      if (event.target.files.length > 0) {\n        const file = event.target.files[0];\n        this.mcqsForm.get('file').setValue(file);\n      }\n    }\n\n  }\n\n  MCQSComponent.ɵfac = function MCQSComponent_Factory(t) {\n    return new (t || MCQSComponent)(i0.ɵɵdirectiveInject(i1.McqsService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.MatSnackBar), i0.ɵɵdirectiveInject(i4.DomSanitizer), i0.ɵɵdirectiveInject(i5.TopicsService));\n  };\n\n  MCQSComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MCQSComponent,\n    selectors: [[\"app-mcqs\"]],\n    outputs: {\n      submitEvent: \"submitEvent\"\n    },\n    decls: 74,\n    vars: 4,\n    consts: [[1, \"main-content\"], [1, \"container\"], [1, \"row\"], [1, \"col-md-8\"], [1, \"card\"], [1, \"card-header\", \"card-header-danger\"], [1, \"card-title\"], [1, \"card-body\"], [3, \"formGroup\"], [\"for\", \"sequence\"], [1, \"input_text\"], [\"matInput\", \"\", \"type\", \"number\", \"name\", \"sequence\", \"id\", \"sequence\", \"formControlName\", \"sequence\", \"required\", \"\", 1, \"input_form\"], [\"class\", \"text-danger\", \"role\", \"alert\", 4, \"ngIf\"], [1, \"textarea\"], [\"type\", \"text\", \"name\", \"mcqs\", \"id\", \"mcqs\", \"formControlName\", \"mcqs\", \"required\", \"\", \"rows\", \"4\", \"cols\", \"40\"], [1, \"options\"], [\"type\", \"text\", \"name\", \"option1\", \"id\", \"option1\", \"formControlName\", \"option1\", \"required\", \"\"], [\"type\", \"text\", \"name\", \"option2\", \"id\", \"option2\", \"formControlName\", \"option2\", \"required\", \"\"], [\"type\", \"text\", \"name\", \"option3\", \"id\", \"option3\", \"formControlName\", \"option3\", \"required\", \"\"], [\"type\", \"text\", \"name\", \"option4\", \"id\", \"option4\", \"formControlName\", \"option4\", \"required\", \"\"], [\"for\", \"answer\"], [\"appearance\", \"fill\"], [\"formControlName\", \"answer\"], [\"value\", \"option1\"], [\"value\", \"option2\"], [\"value\", \"option3\"], [\"value\", \"option4\"], [1, \"feedback\"], [1, \"feedback__step\"], [\"type\", \"text\", \"name\", \"posFeedback\", \"id\", \"posFeedback\", \"formControlName\", \"posFeedback\", \"required\", \"\"], [\"type\", \"text\", \"name\", \"negFeedback\", \"id\", \"negFeedback\", \"formControlName\", \"negFeedback\", \"required\", \"\"], [\"mat-stroked-button\", \"\", \"type\", \"submit\", 2, \"width\", \"40%\", \"text-align\", \"center\", \"font-size\", \"px\", 3, \"disabled\", \"click\"], [\"role\", \"alert\", 1, \"text-danger\"]],\n    template: function MCQSComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵelementStart(5, \"div\", 5);\n        i0.ɵɵelementStart(6, \"h4\", 6);\n        i0.ɵɵtext(7, \"Create MCQs\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"br\");\n        i0.ɵɵelementStart(9, \"div\", 7);\n        i0.ɵɵelementStart(10, \"form\", 8);\n        i0.ɵɵelementStart(11, \"mat-label\", 9);\n        i0.ɵɵelementStart(12, \"b\");\n        i0.ɵɵtext(13, \"Activity Sequence Number *\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"mat-form-field\", 10);\n        i0.ɵɵelement(15, \"input\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(16, MCQSComponent_small_16_Template, 3, 0, \"small\", 12);\n        i0.ɵɵelement(17, \"br\");\n        i0.ɵɵelementStart(18, \"div\", 13);\n        i0.ɵɵelementStart(19, \"mat-label\");\n        i0.ɵɵtext(20, \"Please enter the Question Statement.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"ul\");\n        i0.ɵɵelementStart(22, \"textarea\", 14);\n        i0.ɵɵtext(23, \" \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 15);\n        i0.ɵɵelementStart(25, \"mat-label\");\n        i0.ɵɵtext(26, \" Please enter the options. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"ul\");\n        i0.ɵɵelementStart(28, \"span\");\n        i0.ɵɵtext(29, \"Option A:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(30, \"input\", 16);\n        i0.ɵɵelementStart(31, \"span\");\n        i0.ɵɵtext(32, \"Option B:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(33, \"input\", 17);\n        i0.ɵɵelementStart(34, \"span\");\n        i0.ɵɵtext(35, \"Option C:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(36, \"input\", 18);\n        i0.ɵɵelementStart(37, \"span\");\n        i0.ɵɵtext(38, \"Option D:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(39, \"input\", 19);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(40, \"div\");\n        i0.ɵɵelementStart(41, \"mat-label\", 20);\n        i0.ɵɵelementStart(42, \"b\");\n        i0.ɵɵtext(43, \"Please select correct Answer.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(44, \"mat-form-field\", 21);\n        i0.ɵɵelementStart(45, \"mat-label\");\n        i0.ɵɵtext(46, \" Choose answer\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(47, \"mat-select\", 22);\n        i0.ɵɵelementStart(48, \"mat-option\", 23);\n        i0.ɵɵtext(49, \"Option A\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(50, \"mat-option\", 24);\n        i0.ɵɵtext(51, \"Option B\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(52, \"mat-option\", 25);\n        i0.ɵɵtext(53, \"Option C\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(54, \"mat-option\", 26);\n        i0.ɵɵtext(55, \"Option D\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(56, MCQSComponent_small_56_Template, 3, 0, \"small\", 12);\n        i0.ɵɵelement(57, \"br\");\n        i0.ɵɵelementStart(58, \"div\", 27);\n        i0.ɵɵelementStart(59, \"div\", 28);\n        i0.ɵɵelementStart(60, \"mat-label\");\n        i0.ɵɵtext(61, \"Feedback, if the answer is correct:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(62, \"textarea\", 29);\n        i0.ɵɵtext(63, \" \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(64, \"div\", 28);\n        i0.ɵɵelementStart(65, \"mat-label\");\n        i0.ɵɵtext(66, \"Feedback, if the answer is incorrect:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(67, \"textarea\", 30);\n        i0.ɵɵtext(68, \" \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(69, \"button\", 31);\n        i0.ɵɵlistener(\"click\", function MCQSComponent_Template_button_click_69_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵtext(70, \"Create\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(71, \"br\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(72, \"br\");\n        i0.ɵɵelement(73, \"br\");\n      }\n\n      if (rf & 2) {\n        let tmp_1_0;\n        let tmp_2_0;\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"formGroup\", ctx.mcqsForm);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", !ctx.mcqsForm.valid && ((tmp_1_0 = ctx.mcqsForm.get(\"sequence\")) == null ? null : tmp_1_0.errors) && (((tmp_1_0 = ctx.mcqsForm.get(\"sequence\")) == null ? null : tmp_1_0.dirty) || ((tmp_1_0 = ctx.mcqsForm.get(\"sequence\")) == null ? null : tmp_1_0.touched)));\n        i0.ɵɵadvance(40);\n        i0.ɵɵproperty(\"ngIf\", !ctx.mcqsForm.valid && ((tmp_2_0 = ctx.mcqsForm.get(\"answer\")) == null ? null : tmp_2_0.errors) && (((tmp_2_0 = ctx.mcqsForm.get(\"answer\")) == null ? null : tmp_2_0.dirty) || ((tmp_2_0 = ctx.mcqsForm.get(\"answer\")) == null ? null : tmp_2_0.touched)));\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"disabled\", ctx.mcqsForm.invalid);\n      }\n    },\n    directives: [i6.ɵNgNoValidate, i6.NgControlStatusGroup, i6.FormGroupDirective, i7.MatLabel, i7.MatFormField, i8.MatInput, i6.NumberValueAccessor, i6.DefaultValueAccessor, i6.NgControlStatus, i6.FormControlName, i6.RequiredValidator, i9.NgIf, i10.MatSelect, i11.MatOption, i12.MatButton],\n    styles: [\"\"]\n  });\n  return MCQSComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}