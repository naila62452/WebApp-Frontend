{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst api_path_mcqs = 'http://localhost:5000/api/mcqs';\nconst api_path_trueFalse = 'http://localhost:5000/api/true_false';\nexport let QuestionsService = /*#__PURE__*/(() => {\n  class QuestionsService {\n    constructor(http) {\n      this.http = http;\n    }\n\n    addMcqs(mcqsForm, topicId) {\n      let id = localStorage.getItem('id'); // return this.http.post(`${api_path}/create/${id}/${topicId}/${typeId}`, mcqsForm)\n\n      return this.http.post(`${api_path_mcqs}/createQuestion/${id}/${topicId}`, mcqsForm);\n    }\n\n    getMcqs() {\n      return this.http.get(`${api_path_mcqs}/`);\n    } // getImageMcqs(imageName: string) {\n    //   return this.http.get(`${api_path}/image?image=${imageName}`, { responseType: 'blob'})\n    // }\n\n\n    getImageMcqs(imageName) {\n      return this.http.get(`${api_path_mcqs}/files/${imageName}`, {\n        responseType: 'blob'\n      });\n    }\n\n    getMcqsByTopic(topic) {\n      let id = localStorage.getItem('id'); // return this.http.get(`${api_path}/getMcqs/${id}/${topic}/${type}`)\n\n      return this.http.get(`${api_path_mcqs}/getMcqs/${id}/${topic}`);\n    }\n\n    deleteMcqs(id) {\n      return this.http.delete(`${api_path_mcqs}/delete/${id}`);\n    }\n\n    addTrueFalse(trueFlaseForm, topicId) {\n      let id = localStorage.getItem('id');\n      return this.http.post(`${api_path_trueFalse}/create/${id}/${topicId}`, trueFlaseForm);\n    }\n\n    getTrueFalseByTopic(topic) {\n      let id = localStorage.getItem('id');\n      return this.http.get(`${api_path_trueFalse}/get/${id}/${topic}`);\n    }\n\n    deleteTrueFalse(id) {\n      return this.http.delete(`${api_path_trueFalse}/delete/${id}`);\n    }\n\n  }\n\n  QuestionsService.ɵfac = function QuestionsService_Factory(t) {\n    return new (t || QuestionsService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  QuestionsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: QuestionsService,\n    factory: QuestionsService.ɵfac,\n    providedIn: 'root'\n  });\n  return QuestionsService;\n})();","map":null,"metadata":{},"sourceType":"module"}