{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/introduction\";\nimport * as i2 from \"@angular/material/snack-bar\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/button\";\n\nfunction IntroductionComponent_small_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 16);\n    i0.ɵɵelementStart(1, \"div\");\n    i0.ɵɵtext(2, \" Please enter a Sequence of Number. \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let IntroductionComponent = /*#__PURE__*/(() => {\n  class IntroductionComponent {\n    constructor(introService, _snackBar) {\n      this.introService = introService;\n      this._snackBar = _snackBar;\n      this.submitEvent = new EventEmitter();\n      this.introForm = new FormGroup({\n        introduction: new FormControl(\"\", [Validators.required]),\n        sequence: new FormControl(\"\", [Validators.required])\n      });\n      this.introduction = [];\n    }\n\n    SetAsSubmitted(value) {\n      this.submitEvent.emit(value);\n    }\n\n    ngOnInit() {}\n\n    onSubmit() {\n      this.topic = localStorage.getItem('topicId');\n      console.log(this.introForm.value);\n      this.introService.addAll(this.introForm.value, this.topic).subscribe(res => {\n        this.introduction = res;\n\n        this._snackBar.open(\" Your Introduction has been Posted\", \"Ok\", {\n          duration: 5000,\n          panelClass: ['blue-snackbar']\n        });\n\n        this.SetAsSubmitted(true);\n        localStorage.setItem('remainingQuestions', parseInt(localStorage.getItem('remainingQuestions')) + 1 + '');\n        this.introForm.reset();\n      }, err => {\n        console.log(err);\n\n        this._snackBar.open(\" Your Introduction has not been Posted\", \"Ok\", {\n          duration: 5000,\n          panelClass: ['blue-snackbar']\n        });\n      });\n    }\n\n  }\n\n  IntroductionComponent.ɵfac = function IntroductionComponent_Factory(t) {\n    return new (t || IntroductionComponent)(i0.ɵɵdirectiveInject(i1.IntroductionService), i0.ɵɵdirectiveInject(i2.MatSnackBar));\n  };\n\n  IntroductionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: IntroductionComponent,\n    selectors: [[\"app-introduction\"]],\n    outputs: {\n      submitEvent: \"submitEvent\"\n    },\n    decls: 29,\n    vars: 3,\n    consts: [[1, \"main-content\"], [1, \"container\"], [1, \"row\"], [1, \"col-md-8\"], [1, \"card\"], [1, \"card-header\", \"card-header-danger\"], [1, \"card-title\"], [1, \"card-body\"], [3, \"formGroup\"], [\"for\", \"sequence\"], [1, \"input_text\"], [\"matInput\", \"\", \"type\", \"number\", \"name\", \"sequence\", \"id\", \"sequence\", \"formControlName\", \"sequence\", \"required\", \"\", 1, \"input_form\"], [\"class\", \"text-danger\", \"role\", \"alert\", 4, \"ngIf\"], [1, \"textarea\"], [\"type\", \"text\", \"name\", \"introduction\", \"id\", \"introduction\", \"formControlName\", \"introduction\", \"required\", \"\", \"rows\", \"4\", \"cols\", \"40\"], [\"mat-stroked-button\", \"\", \"type\", \"submit\", 2, \"width\", \"40%\", \"text-align\", \"center\", \"font-size\", \"px\", 3, \"disabled\", \"click\"], [\"role\", \"alert\", 1, \"text-danger\"]],\n    template: function IntroductionComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵelementStart(5, \"div\", 5);\n        i0.ɵɵelementStart(6, \"h4\", 6);\n        i0.ɵɵtext(7, \"Create Introduction\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"br\");\n        i0.ɵɵelementStart(9, \"div\", 7);\n        i0.ɵɵelementStart(10, \"form\", 8);\n        i0.ɵɵelementStart(11, \"mat-label\", 9);\n        i0.ɵɵelementStart(12, \"b\");\n        i0.ɵɵtext(13, \"Activity Sequence Number *\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"mat-form-field\", 10);\n        i0.ɵɵelement(15, \"input\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(16, IntroductionComponent_small_16_Template, 3, 0, \"small\", 12);\n        i0.ɵɵelement(17, \"br\");\n        i0.ɵɵelementStart(18, \"div\", 13);\n        i0.ɵɵelementStart(19, \"mat-label\");\n        i0.ɵɵtext(20, \"Please enter the Introduction. *\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"ul\");\n        i0.ɵɵelementStart(22, \"textarea\", 14);\n        i0.ɵɵtext(23, \" \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"button\", 15);\n        i0.ɵɵlistener(\"click\", function IntroductionComponent_Template_button_click_24_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵtext(25, \"Create\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(26, \"br\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(27, \"br\");\n        i0.ɵɵelement(28, \"br\");\n      }\n\n      if (rf & 2) {\n        let tmp_1_0;\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"formGroup\", ctx.introForm);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", !ctx.introForm.valid && ((tmp_1_0 = ctx.introForm.get(\"sequence\")) == null ? null : tmp_1_0.errors) && (((tmp_1_0 = ctx.introForm.get(\"sequence\")) == null ? null : tmp_1_0.dirty) || ((tmp_1_0 = ctx.introForm.get(\"sequence\")) == null ? null : tmp_1_0.touched)));\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"disabled\", ctx.introForm.invalid);\n      }\n    },\n    directives: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i4.MatLabel, i4.MatFormField, i5.MatInput, i3.NumberValueAccessor, i3.DefaultValueAccessor, i3.NgControlStatus, i3.FormControlName, i3.RequiredValidator, i6.NgIf, i7.MatButton],\n    styles: [\"\"]\n  });\n  return IntroductionComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}